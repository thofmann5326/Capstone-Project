GroupData<-read.csv(file.choose(),header=T)
head(GroupData)
install.packages('dplyr')
library(dplyr)
library(reshape2)
GroupCor<-as.matrix(cor(GroupData))
library(nnet)
set.seed(1000)
GroupNN<-nnet(HighValueCar ~., data=GroupData,size=8,maxit=10000)
GroupNN<-nnet(HighValueCar ~., data=GroupData,size=8,maxit=100000)
GroupData<-read.csv(file.choose(),header=T)
head(GroupData)
GroupNN<-nnet(HighValueCar ~., data=GroupData,size=8,maxit=100000)
GroupNN <- nnet(HighValueCar ~., data = GroupData, size = 4, maxit = 100000, decay = 0.01)
GroupData<-read.csv(file.choose(),header=T)
GroupNN <- nnet(HighValueCar ~., data = GroupData, size = 4, maxit = 100000, decay = 0.01)
library(NeuralNetTools)
plotnet(GroupData)
plotnet(GroupNN)
install.packages("e1071")
set.seed(123)
sample_size <- floor(0.7 * nrow(GroupData))
train_data <- GroupData[sample(sample_size, nrow(GroupData)), ]
data <- GroupData[, c("HighValueCar", "brand", "model", "model_year", "milage", "accident", )]
data <- GroupData[, c("HighValueCar", "brand", "model", "model_year", "milage", "accident" )]
head(GroupData)
formula <- HighValueCar ~ brand + model_year + mileage + accident
sample_size <- floor(0.7 * nrow(GroupData))
train_data <- GroupData[sample(sample_size, nrow(GroupData)), ]
set.seed(123)
sample_indices <- sample(nrow(GroupData), size = sample_size, replace = TRUE)
train_data <- GroupData[sample_indices, ]
test_data <- GroupData[-sample_indices, ]
naive_bayes_model <- naiveBayes(formula, data = train_data)
library(e1071)
naive_bayes_model <- naiveBayes(formula, data = train_data)
formula <- HighValueCar ~ brand + model_year + mileage + accident
naive_bayes_model <- naiveBayes(formula, data = train_data)
formula <- HighValueCar ~ brand + model_year + milage + accident
naive_bayes_model <- naiveBayes(formula, data = train_data)
predictions <- predict(naive_bayes_model, newdata = test_data, type = "class")
confusion_matrix <- table(Actual = test_data$HighValueCar, Predicted = predictions)
accuracy <- sum(diag(confusion_matrix)) / sum(confusion_matrix)
print(confusion_matrix)
cat("Accuracy:", accuracy)
summary(predictions)
predictions_all <- predict(naive_bayes_model, newdata = GroupData, type = "class")
GroupData$Predicted_HighValueCar <- predictions_all
write.csv(GroupData, "GroupData_with_predictions.csv", row.names = FALSE)
View(naive_bayes_model)
View(naive_bayes_model)
predictions_nn <- predict(GroupNN, newdata = test_data, type = "class")
GroupNN <- nnet(HighValueCar ~ ., data = GroupData, size = 4, maxit = 100000, decay = 0.01)
