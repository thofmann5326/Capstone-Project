GroupData<-read.csv(file.choose(),header=T)
GroupData[1]<-NULL
install.packages('dplyr')
library(dplyr)
library(reshape2)
GroupDataCor<-as.matrix(cor(GroupData))
dim(GroupData)
head(GroupData)
str(GroupData)
GroupData$HighValueCar <- as.character(GroupData$HighValueCar)
GroupDataCor<-as.matrix(cor(GroupData))
GroupData$HighValueCar <- as.numeric(GroupData$HighValueCar)
GroupDataCor<-as.matrix(cor(GroupData))
head(GroupData)
str(GroupData)
GroupData$accident <- as.factor(GroupData$accident)
GroupDataCor<-as.matrix(cor(GroupData))
GroupData<-read.csv(file.choose(),header=T)
GroupData[1]<-NULL
GroupDataCor<-as.matrix(cor(GroupData))
GroupData<-read.csv(file.choose(),header=T)
GroupDataCor<-as.matrix(cor(GroupData))
str(GroupData)
GroupData$brand <- as.factor(GroupData$brand)
GroupData$brand_numeric <- as.numeric(GroupData$brand)
str(GroupData)
GroupData<-read.csv(file.choose(),header=T)
str(GroupData)
GroupData[1]<-NULL
str(GroupData)
GroupData[1]<-NULL
str(GroupData)
GroupData[1]<-NULL
str(GroupData)
GroupData[3]<-NULL
GroupData[3]<-NULL
str(GroupData)
str(GroupData)
GroupData[3]<-NULL
GroupData[3]<-NULL
str(GroupData)
GroupData<-read.csv(file.choose(),header=T)
str(GroupData)
GroupDataCor<-as.matrix(cor(GroupData))
GroupData<-read.csv(file.choose(),header=T)
str(GroupData)
GroupData<-read.csv(file.choose(),header=T)
str(GroupData)
GroupDataCor<-as.matrix(cor(GroupData))
GroupDataCormelt<-arrange(melt(GroupDataCor), -abs(value))
GroupDataCor[!lower.tri(GroupDataCor)]<-0
GroupData2<-GroupData[,!apply(GroupDataCor,2,function(x) any(abs(x) > 0.8))]
library(nnet)
set.seed(1000)
GroupDataNet<-nnet(HighValueCar ~., data = GroupData,size8,maxit=10000)
GroupDataNet<-nnet(HighValueCar ~., data = GroupData,size4,maxit=10000)
install.packages("NeuralNetTools")
install.packages("nnet")
install.packages("nnet")
library(NeuralNetTools)
GroupDataNet<-nnet(HighValueCar ~., data = GroupData,size4,maxit=10000)
GroupNN <- nnet(HighValueCar ~., data = GroupData, size = 4, maxit = 100000, decay = 0.01)
library(nnet)
GroupNN <- nnet(HighValueCar ~., data = GroupData, size = 4, maxit = 100000, decay = 0.01)
GroupData<-read.csv(file.choose(),header=T)
GroupNN <- nnet(HighValueCar ~., data = GroupData, size = 4, maxit = 100000, decay = 0.01)
GroupNN <- nnet(HighValueCar ~., data = GroupData, size = 8, maxit = 100000, decay = 0.01)
GroupNN <- nnet(HighValueCar ~., data = GroupData, size = 2, maxit = 100000, decay = 0.01)
GroupNN <- nnet(HighValueCar ~., data = GroupData, size = 1, maxit = 100000, decay = 0.01)
GroupNN <- nnet(HighValueCar ~., data = GroupData, size = 1, maxit = 1000000, decay = 0.01)
GroupNN <- nnet(HighValueCar ~., data = GroupData, size = 2, maxit = 1000000, decay = 0.01)
GroupData<-read.csv(file.choose(),header=T)
GroupNN <- nnet(HighValueCar ~., data = GroupData, size = 2, maxit = 1000000, decay = 0.01)
GroupNN <- nnet(HighValueCar ~., data = GroupData, size = 8, maxit = 1000000, decay = 0.01)
GroupNN <- nnet(HighValueCar ~., data = GroupData, size = 8, maxit = 100000, decay = 0.01)
library(NeuralNetTools)
plotnet(GroupNN)
library("e1071")
library("e1071")
library("caret")
library("caret")
install.packages("caret")
library("caret")
library("caret")
set.seed(123)
smp_size <- floor(0.7 * nrow(GroupData))
train_ind<-sample(seq_len(nrow(GroupData)), size = smp_size)
train<-GroupData[train_ind, ]
test<-GroupData[train_ind, ]
nrow(train)/nrow(GroupData)
LRmodel<-glm(HighValueCar, test, type="response")
LRmodel<-glm(HighValueCar ~., family="binomial", train)
LRp<-predict(LRmodel, test, type = "response")
summary(LRp)
LRpredict<-ifelse(LRp>0.20, 1, 0)
table(LRpredict, test[["HighValueCar"]])
LRp_class<-as.factor(LRpredict)
confusionMatrix(LRp_class, as.factor(test[["HighValueCar"]]))
